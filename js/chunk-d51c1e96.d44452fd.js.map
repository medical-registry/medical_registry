{"version":3,"sources":["webpack:///./src/views/Diseases.vue?e288","webpack:///src/views/Diseases.vue","webpack:///./src/views/Diseases.vue?2e4d","webpack:///./src/views/Diseases.vue","webpack:///../../../src/components/VDataTable/VSimpleTable.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","_v","_l","item","key","id_care","staticClass","chronic","_s","disease","name","to","formatDate","from","scopedSlots","_u","fn","_e","staticStyle","body_impacted","note","medical_exemption","medical_exemption_code","medical_exemption_number","proxy","database","disease_register","staticRenderFns","components","methods","data","items","created","fetchDiseases","component","VCard","VCardText","VCardTitle","VContainer","VSimpleTable","VTimeline","VTimelineItem","props","dense","fixedHeader","height","Number","String","computed","classes","themeClasses","genWrapper","$slots","wrapper","style","h","class"],"mappings":"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","file":"js/chunk-d51c1e96.d44452fd.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"elevation\":\"0\"}},[_c('v-card-title',[_vm._v(\"Patologie \")]),_c('v-container',[_c('v-timeline',{attrs:{\"align-top\":\"\",\"dense\":\"\"}},_vm._l((_vm.items),function(item){return _c('v-timeline-item',{key:item.id_care,attrs:{\"small\":\"\"}},[_c('v-card',{staticClass:\"elevation-3\"},[(item.chronic==true)?_c('v-card-title',{staticClass:\"text-center\"},[_vm._v(\" \"+_vm._s(item.disease.name)+\" (Cronico)\")]):_c('v-card-title',{staticClass:\"text-center\"},[_vm._v(\" \"+_vm._s(item.disease.name))]),(!item.to)?_c('v-card-title',{staticClass:\"headline capitalized\"},[_vm._v(_vm._s(_vm.formatDate(item.from))+\" \")]):_c('v-card-title',{staticClass:\"headline capitalized\"},[_vm._v(\"Dal \"+_vm._s(_vm.formatDate(item.from))+\" al \"+_vm._s(_vm.formatDate(item.to))+\" \")]),_c('v-card-text',[_c('v-simple-table',{scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('thead',[_c('tr',[(item.body_impacted)?_c('th',{staticClass:\"text-left\"},[_vm._v(\" Parte del Corpo\")]):_vm._e(),(item.note)?_c('th',{staticClass:\"text-left\",staticStyle:{\"width\":\"500px\"}},[_vm._v(\"Note\")]):_vm._e(),(item.medical_exemption)?_c('th',{staticClass:\"text-left\"},[_vm._v(\" Esenzione Medica\")]):_vm._e(),(item.medical_exemption_code)?_c('th',{staticClass:\"text-left\"},[_vm._v(\" Codice Esenzione\")]):_vm._e(),(item.medical_exemption_number)?_c('th',{staticClass:\"text-left\"},[_vm._v(\" Numero Esenzione\")]):_vm._e(),_c('th',{attrs:{\"colspan\":\"2\"}})])]),_c('tbody',[_c('tr',[(item.body_impacted)?_c('td',[_vm._v(_vm._s(item.body_impacted))]):_vm._e(),(item.note)?_c('td',[_vm._v(_vm._s(item.note))]):_vm._e(),(item.medical_exemption)?_c('td',[_vm._v(_vm._s(item.medical_exemption))]):_vm._e(),(item.medical_exemption_code)?_c('td',[_vm._v(\" \"+_vm._s(item.medical_exemption_code))]):_vm._e(),(item.medical_exemption_number)?_c('td',[_vm._v(\" \"+_vm._s(item.medical_exemption_number))]):_vm._e(),_c('td',{attrs:{\"colspan\":\"4\"}})])])]},proxy:true}],null,true)})],1)],1)],1)}),1),_c('AutocompleteSearch',{attrs:{\"invalid-hint\":\"Seleziona Patologia\",\"label\":\"Patologia\",\"table\":_vm.database.disease_register}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <v-card elevation=\"0\">\n      <v-card-title>Patologie </v-card-title>\n      <v-container>\n        <v-timeline  align-top dense>\n          <v-timeline-item v-for=\"item in items\" :key=\"item.id_care\" small>\n            <v-card class=\"elevation-3\">\n              <v-card-title v-if=\"item.chronic==true\" class=\"text-center\">\n                   {{item.disease.name}} (Cronico)</v-card-title>\n              <v-card-title v-else class=\"text-center\">\n                   {{item.disease.name}}</v-card-title>\n              <v-card-title v-if=\"!item.to\" class=\"headline capitalized\">{{formatDate(item.from)}}\n              </v-card-title>\n              <v-card-title v-else class=\"headline capitalized\">Dal {{formatDate(item.from)}}\n                al {{formatDate(item.to)}}\n              </v-card-title>\n              <v-card-text>\n                  <v-simple-table>\n                    <template v-slot:default>\n                      <thead>\n                            <tr>\n                              <th v-if=\"item.body_impacted\" class=\"text-left\">\n                                  Parte del Corpo</th>\n                              <th v-if=\"item.note\" class=\"text-left\" style=\"width: 500px\">Note</th>\n                              <th v-if=\"item.medical_exemption\" class=\"text-left\">\n                                  Esenzione Medica</th>\n                              <th v-if=\"item.medical_exemption_code\" class=\"text-left\">\n                                  Codice Esenzione</th>\n                              <th v-if=\"item.medical_exemption_number\" class=\"text-left\">\n                                  Numero Esenzione</th>\n                              <th colspan=\"2\"/>\n                            </tr>\n                      </thead>\n                      <tbody>\n                          <tr>\n                          <td v-if=\"item.body_impacted\">{{item.body_impacted}}</td>\n                          <td v-if=\"item.note\">{{item.note}}</td>\n                          <td v-if=\"item.medical_exemption\">{{item.medical_exemption}}</td>\n                          <td v-if=\"item.medical_exemption_code\">\n                              {{item.medical_exemption_code}}</td>\n                          <td v-if=\"item.medical_exemption_number\">\n                              {{item.medical_exemption_number}}</td>\n                          <td colspan=\"4\"/>\n                          </tr>\n                      </tbody>\n                    </template>\n                  </v-simple-table>\n              </v-card-text>\n            </v-card>\n          </v-timeline-item>\n        </v-timeline>\n        <AutocompleteSearch\n            invalid-hint=\"Seleziona Patologia\"\n            label=\"Patologia\"\n            :table=\"database.disease_register\"\n        />\n      </v-container>\n    </v-card>\n\n</template>\n\n<script>\nimport { keyBy } from '@/services/util';\nimport db from '@/services/database';\nimport moment from 'moment';\nimport AutocompleteSearch from '@/components/AutocompleteSearch.vue';\n\nexport default {\n  name: 'Diseases',\n  components: { AutocompleteSearch },\n  methods: {\n    formatDate: (value) => moment(value).format('LL'),\n    async fetchDiseases() {\n      const userDiseases = await db.diseases\n        .where({ id_person: this.$store.state.user.id }).toArray();\n      const diseasesIds = [...new Set(userDiseases.map((item) => item.id_disease))];\n      const diseaseRegister = await db.disease_register.bulkGet(diseasesIds);\n      const keyedDiseaseDefinitions = keyBy(diseaseRegister, 'id');\n      this.items = userDiseases.map((item) => ({\n        ...item,\n        disease: keyedDiseaseDefinitions[item.id_disease],\n      }));\n    },\n  },\n  data() {\n    return {\n      database: db,\n      items: null,\n    };\n  },\n  created() {\n    this.fetchDiseases();\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Diseases.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Diseases.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Diseases.vue?vue&type=template&id=e8f146c6&\"\nimport script from \"./Diseases.vue?vue&type=script&lang=js&\"\nexport * from \"./Diseases.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VSimpleTable } from 'vuetify/lib/components/VDataTable';\nimport { VTimeline } from 'vuetify/lib/components/VTimeline';\nimport { VTimelineItem } from 'vuetify/lib/components/VTimeline';\ninstallComponents(component, {VCard,VCardText,VCardTitle,VContainer,VSimpleTable,VTimeline,VTimelineItem})\n","import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n"],"sourceRoot":""}